/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.2-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.api;

import com.example.api.models.PersonObject;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "people", description = "the people API")
public interface PeopleApi {

    default PeopleApiDelegate getDelegate() {
        return new PeopleApiDelegate() {};
    }

    @ApiOperation(value = "", nickname = "getPerson", notes = "Retrieves a Person having the specified id.", response = PersonObject.class, tags={ "PersonObject", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response, with a representation of save.", response = PersonObject.class),
        @ApiResponse(code = 404, message = "The person was not found.") })
    @RequestMapping(value = "/people/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<PersonObject> getPerson(@Size(max=10) @ApiParam(value = "id of the person",required=true) @PathVariable("id") String id) {
        return getDelegate().getPerson(id);
    }


    @ApiOperation(value = "", nickname = "savePerson", notes = "Saves a person .", response = PersonObject.class, tags={ "PersonObject", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response, with a representation of the Tax Filing.", response = PersonObject.class),
        @ApiResponse(code = 304, message = "The requested tax filing was not saved.") })
    @RequestMapping(value = "/people",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    default ResponseEntity<PersonObject> savePerson(@ApiParam(value = "Person object that needs to be added to the store" ,required=true )  @Valid @RequestBody PersonObject personObject) {
        return getDelegate().savePerson(personObject);
    }

}
